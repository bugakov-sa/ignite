<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1514825453000</longProp>
        <longProp name="ThreadGroup.end_time">1514825453000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;login&quot;:&quot;user0&quot;,&#xd;
	&quot;positions&quot;:[{&#xd;
		&quot;id&quot;:0,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:1,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:1,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:2,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100&#xd;
		}&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">contract</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;login&quot;:&quot;user1&quot;,&#xd;
	&quot;positions&quot;:[{&#xd;
		&quot;id&quot;:3,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:1,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:4,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:5,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100&#xd;
		}&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">contract</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;login&quot;:&quot;user2&quot;,&#xd;
	&quot;positions&quot;:[{&#xd;
		&quot;id&quot;:6,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:1,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:7,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:8,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100&#xd;
		}&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">contract</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;login&quot;:&quot;user3&quot;,&#xd;
	&quot;positions&quot;:[{&#xd;
		&quot;id&quot;:9,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:1,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:10,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:11,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100&#xd;
		}&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">contract</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;login&quot;:&quot;user4&quot;,&#xd;
	&quot;positions&quot;:[{&#xd;
		&quot;id&quot;:12,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:1,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:13,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:14,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100&#xd;
		}&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">contract</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;login&quot;:&quot;user5&quot;,&#xd;
	&quot;positions&quot;:[{&#xd;
		&quot;id&quot;:15,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:1,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:16,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100,&#xd;
			&quot;10000&quot;:75,&#xd;
			&quot;100000&quot;:50,&#xd;
			&quot;1000000&quot;:25	&#xd;
		}&#xd;
	},{&#xd;
		&quot;id&quot;:17,&#xd;
		&quot;source&quot;:&quot;source1&quot;,&#xd;
		&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
		&quot;trafficType&quot;:0,&#xd;
		&quot;recalcRule&quot;:0,&#xd;
		&quot;steps&quot;: {&#xd;
			&quot;0&quot;:100&#xd;
		}&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">contract</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">100000</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1514822202000</longProp>
        <longProp name="ThreadGroup.end_time">1514822202000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user0&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user1&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user2&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user3&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user4&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user5&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user0&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user1&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user2&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user3&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user4&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user5&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user0&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user1&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user2&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user3&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user4&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user5&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user0&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user1&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user2&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user3&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user4&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user5&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user0&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user1&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user2&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user3&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;megafon&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user4&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;mts&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
},{&#xd;
	&quot;messageId&quot;:1,&#xd;
	&quot;login&quot;:&quot;user5&quot;,&#xd;
	&quot;source&quot;:&quot;source1&quot;,&#xd;
	&quot;operatorGroup&quot;:&quot;beeline&quot;,&#xd;
	&quot;trafficType&quot;:0&#xd;
}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">bill2</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
